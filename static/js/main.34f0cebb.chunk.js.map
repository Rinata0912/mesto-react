{"version":3,"sources":["images/form_close-icon.svg","images/logo.svg","images/button-edit_icon.svg","images/button-add_icon.svg","components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","utils/useClosePopup.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","src","logo","alt","api","options","_handleOriginalRes","res","ok","json","Promise","reject","this","_options","fetch","baseUrl","headers","then","name","about","method","body","JSON","stringify","link","id","avatar","authorization","Card","card","onCardClick","type","width","height","viewBox","fill","xmlns","d","onClick","evt","preventDefault","stroke","likes","length","Main","onAddPlace","onEditAvatar","onEditProfile","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","all","getUserInfo","getInitialCards","values","userInfo","initCards","editBtn","addBtn","map","key","_id","Footer","useClosePopup","onClose","isOpen","handleOnClose","useCallback","target","currentTarget","document","addEventListener","removeEventListener","PopupWithForm","title","children","popupCloseBtn","noValidate","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","placeholder","required","minLength","maxLength","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.34f0cebb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/form_close-icon.70ad98da.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.e889e45f.svg\";","module.exports = __webpack_public_path__ + \"static/media/button-edit_icon.b9b65c7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/button-add_icon.50cf4861.svg\";","import React from 'react';\nimport logo from '../images/logo.svg';\n\nexport function Header() {\n  return(\n    <header className=\"header\">\n      <a href=\"/\" className=\"logo\"><img src={logo} alt=\"логотип\" className=\"logo__img\" /></a>\n    </header>\n  );\n}","class Api {\n  constructor(options) {\n    this._options = options;\n  }\n\n  _handleOriginalRes = (res) => {\n    if(res.ok) {\n      return res.json();\n    }\n    return Promise.reject(res);\n  }\n\n  getInitialCards () {\n    return fetch(`${this._options.baseUrl}/cards`, {headers: this._options.headers})\n      .then(this._handleOriginalRes)\n      .then(res => res)\n  }\n\n  getUserInfo () {\n    return fetch(`${this._options.baseUrl}/users/me`, {headers: this._options.headers})\n      .then(this._handleOriginalRes)\n      .then(res => res)\n  }\n\n  editProfileInfo (name, about) {\n    return fetch(`${this._options.baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._options.headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    })\n      .then(this._handleOriginalRes)\n      .then(res => res)\n  }\n\n  addCard (name, link) {\n    return fetch(`${this._options.baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._options.headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    })\n      .then(this._handleOriginalRes)\n      .then(res => res)\n  }\n\n  deleteCard (id) {\n    return fetch(`${this._options.baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._options.headers\n    })\n      .then(this._handleOriginalRes)\n      .then(res => res)\n  }\n\n  likeCard (id) {\n    return fetch(`${this._options.baseUrl}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this._options.headers\n    })\n      .then(this._handleOriginalRes)\n      .then(res => res)\n  }\n\n  unlikeCard (id) {\n    return fetch(`${this._options.baseUrl}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this._options.headers\n    })\n      .then(this._handleOriginalRes)\n      .then(res => res)\n  }\n\n  updateAvatar (avatar) {\n    return fetch(`${this._options.baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._options.headers,\n      body: JSON.stringify({\n        avatar\n      })\n    })\n      .then(this._handleOriginalRes)\n      .then(res => res)\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n  headers: {\n    authorization: '0104c4f6-b4d1-4baf-96ce-c414c2f8cbbe',\n    'Content-Type': 'application/json',\n  },\n} );\n\nexport {api};\n","import React from 'react';\n\nexport function Card({card, onCardClick}) {\n  function handleClick(evt) {\n    evt.preventDefault();\n    onCardClick(card);\n  }\n\n  return(\n    <article className=\"card\">\n      <button \n        className=\"card__delete-btn card__delete-btn_state_visible\" \n        type=\"button\">\n        <svg \n          className=\"card__delete-icon\" \n          width=\"18\" \n          height=\"20\" \n          viewBox=\"0 0 18 20\" \n          fill=\"none\" \n          xmlns=\"http://www.w3.org/2000/svg\">\n          <defs/>\n          <path d=\"M2.458 18.142c.06.67.61 1.158 1.28 1.158H14.26c.67 0 1.22-.508 1.28-1.158L16.72 5.79H1.28l1.179 12.352zM16.72 1.93h-5.14v-.65C11.58.569 11.011 0 10.3 0H7.72C7.01 0 6.44.569 6.44 1.28v.65H1.28C.569 1.93 0 2.499 0 3.21c0 .711.569 1.28 1.28 1.28h15.44c.711 0 1.28-.569 1.28-1.28 0-.711-.569-1.28-1.28-1.28z\" fill=\"#fff\"/>\n        </svg>\n      </button>\n      <a className=\"card__show-image\" href=\"/\" onClick={handleClick}>\n        <img src={card.link} alt=\"\" className=\"card__image\" />\n      </a>\n      <div className=\"card__content\">\n        <p className=\"card__title\">{card.name}</p>\n        <div className=\"card__like\">\n          <button className=\"card__btn\">\n            <svg \n              className=\"card__btn-icon\" \n              width=\"21\" \n              height=\"19\" \n              viewBox=\"0 0 21 19\" \n              fill=\"currentcolor\" \n              xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M18.8 1.959l.002.001c1.942 1.923 1.944 5.079-.002 7.024l-8.439 8.44-8.414-8.415-.002-.002A5.013 5.013 0 01.5 5.482v-.004a4.93 4.93 0 011.443-3.52h0l.001-.001C3.866.016 7.022.013 8.968 1.977l.001.002 1.038 1.04.358.357.353-.361 1.036-1.058a4.986 4.986 0 017.047.002z\" stroke=\"#000\"  />\n            </svg>\n          </button>\n          <span className=\"card__like-counter\">{card.likes.length}</span>\n        </div>\n      </div>\n    </article>);\n}","import React, {useState, useEffect} from 'react';\nimport editBtn from '../images/button-edit_icon.svg';\nimport addBtn from '../images/button-add_icon.svg';\nimport {api} from '../utils/api';\nimport {Card} from './Card';\n\nexport function Main({onAddPlace, onEditAvatar, onEditProfile, onCardClick}) {\n  const [userName, setUserName] = useState();\n  const [userDescription, setUserDescription] = useState();\n  const [userAvatar, setUserAvatar] = useState();\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then((values) => {\n        const [userInfo, initCards] = values;\n        setUserName(userInfo.name);\n        setUserDescription(userInfo.about);\n        setUserAvatar(userInfo.avatar);\n        setCards(initCards);\n      })\n  }, []);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__container\">\n          <div className=\"profile__avatar\">\n            <img src={userAvatar} alt=\"фотография пользователя\" className=\"profile__avatar-img\" />\n            <button className=\"profile__avatar-edit\" onClick={onEditAvatar}>\n              <svg className=\"profile__avatar-edit-icon\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <defs/>\n                <path d=\"M26 3.454L6.77 22.794 3.336 19.29 22.517 0 26 3.454zM0 26l5.102-1.53-3.581-3.453L0 26z\" fill=\"#fff\"/>\n              </svg>\n            </button>\n          </div>\n          <div className=\"profile__info\">\n            <div className=\"profile__info-container\">\n              <h1 className=\"profile__name\">{userName}</h1>\n              <button className=\"profile__btn profile__btn_type_edit\" type=\"button\" onClick={onEditProfile}><img src={editBtn} alt=\"редактировать профиль\" className=\"profile__btn-icon profile__btn-icon_type_edit\" /></button>\n            </div>\n            <p className=\"profile__job\">{userDescription}</p>\n          </div>\n        </div>\n        <button className=\"profile__btn profile__btn_type_add\" type=\"button\" onClick={onAddPlace}><img src={addBtn} alt=\"добавить карточку\" /></button>\n      </section>\n      <section className=\"cards-gallery\">\n        {cards.map((card) => {\n          return <Card key={card._id} card={card} onCardClick={onCardClick}/>\n        })}\n      </section>\n    </main>\n  );\n}","import React from 'react';\n\nexport function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">© 2020 Mesto Russia</p>\n    </footer>\n  );\n}","import {useCallback, useEffect} from 'react';\n\nfunction useClosePopup({onClose, isOpen}) {\n  const handleOnClose = useCallback((evt) => {\n    if(evt.target === evt.currentTarget || evt.key === 'Escape') {\n      onClose();\n    }\n  },[onClose]);\n  \n  useEffect(() => {\n    if(isOpen) {\n      document.addEventListener('keydown', handleOnClose);\n    }\n\n    return () => { \n      document.removeEventListener('keydown', handleOnClose); \n    }\n  }, [isOpen, handleOnClose]);\n\n  return handleOnClose;\n}\n\nexport {useClosePopup};","import React from 'react';\nimport popupCloseBtn from '../images/form_close-icon.svg';\nimport { useClosePopup } from '../utils/useClosePopup';\n\nexport function PopupWithForm({title, name, isOpen, onClose, children}) {\n  \n  const handleOnClose = useClosePopup({onClose, isOpen});\n\n    return (\n      <div \n        className={`popup js-popup-${name} ${isOpen && 'popup_opened'}`} \n        onClick={handleOnClose}>\n        <div className=\"popup__container popup__container_size_m\">\n          <button className=\"popup__close-btn\" type=\"button\">\n            <img \n              src={popupCloseBtn} \n              alt=\"закрыть форму\" \n              className=\"popup__close-icon\" \n              onClick={handleOnClose}/>\n          </button>\n          <form className=\"form\" name={`${name}ProfileForm`} noValidate>\n            <h3 className=\"form__title\">{title}</h3>\n            {children}\n          </form>\n        </div>\n      </div>\n    );\n}","import React from 'react';\nimport popupCloseBtn from '../images/form_close-icon.svg';\nimport { useClosePopup } from '../utils/useClosePopup';\n\nexport function ImagePopup({card, onClose, isOpen}) {\n  \n  const handleOnClose = useClosePopup({onClose, isOpen});\n\n  return (\n    <div \n      className={`popup js-popup-show-card ${isOpen && `popup_opened`}`} \n      onClick={handleOnClose}>\n      {card && (\n        <div className=\"popup__container\">\n          <button className=\"popup__close-btn\" type=\"button\">\n            <img \n              src={popupCloseBtn} \n              alt=\"закрыть форму\" \n              className=\"popup__close-icon\" \n              onClick={handleOnClose}/>\n          </button>\n          <img className=\"card__img-full\" src={card.link} alt=\"\" />\n          <p className=\"card__img-caption\">{card.name}</p>\n        </div>\n      )}\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { Header } from './Header';\nimport { Main } from './Main';\nimport { Footer } from './Footer';\nimport { PopupWithForm } from './PopupWithForm';\nimport { ImagePopup } from './ImagePopup';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState();\n\n  return (\n    <>\n      <div className=\"page\">\n        <Header />\n        <Main \n          onCardClick={handleCardClick} \n          onEditProfile={handleEditProfileClick} \n          onAddPlace={handleAddPlaceClick} \n          onEditAvatar={handleEditAvatarClick}/>\n        <Footer />\n\n        <PopupWithForm \n          title=\"Редактировать профиль\" \n          name=\"edit\" \n          isOpen={isEditProfilePopupOpen} \n          onClose={closeAllPopups}>\n          <fieldset className=\"form__input-container\">\n            <div className=\"form__control\">\n              <input \n                className=\"form__input js-input-name\" \n                type=\"text\" \n                placeholder=\"Имя\" \n                name=\"name\" \n                required \n                minLength=\"2\" \n                maxLength=\"40\" />\n              <span className=\"form__input-error js-input-name-error\" />\n            </div>\n            <div className=\"form__control\">\n              <input \n                className=\"form__input js-input-job\" \n                type=\"text\" \n                placeholder=\"О себе\" \n                name=\"job\" \n                required \n                minLength=\"2\" \n                maxLength=\"200\" />\n              <span className=\"form__input-error js-input-job-error\" />\n            </div>\n          </fieldset>\n          <button className=\"form__submit-btn\">Сохранить</button>\n        </PopupWithForm>\n\n        <PopupWithForm \n          title=\"Новое место\" \n          name=\"add\" \n          isOpen={isAddPlacePopupOpen} \n          onClose={closeAllPopups}>\n          <fieldset className=\"form__input-container\">\n            <div className=\"form__control\">\n              <input \n                className=\"form__input js-input-place\" \n                type=\"text\" placeholder=\"Название\" \n                name=\"place\" \n                required \n                minLength=\"2\" \n                maxLength=\"30\" />\n              <span className=\"form__input-error js-input-place-error\" />\n            </div>\n            <div className=\"form__control\">\n              <input \n                className=\"form__input js-input-img\" \n                type=\"URL\" \n                placeholder=\"Ссылка на картинку\" \n                name=\"image\" \n                required />\n              <span className=\"form__input-error js-input-img-error\" />\n            </div>\n          </fieldset>\n          <button className=\"form__submit-btn\">Создать</button>\n        </PopupWithForm>\n\n        <PopupWithForm title=\"Вы уверены?\" name=\"confirm\" onClose={closeAllPopups}>\n          <button className=\"form__submit-btn\">Да</button>\n        </PopupWithForm>\n\n        <PopupWithForm \n          title=\"Обновить аватар\" \n          name=\"updateAvatar\" \n          isOpen={isEditAvatarPopupOpen} \n          onClose={closeAllPopups}>\n          <fieldset className=\"form__input-container\">\n            <div className=\"form__control\">\n              <input \n                className=\"form__input js-input-avatar\" \n                type=\"URL\" \n                placeholder=\"Ссылка на картинку\" \n                name=\"avatar\" \n                required />\n              <span className=\"form__input-error js-input-img-error\" />\n            </div>\n          </fieldset>\n          <button className=\"form__submit-btn\">Сохранить</button>\n        </PopupWithForm>\n\n        <ImagePopup card={selectedCard} isOpen={!!selectedCard} onClose={closeAllPopups}/>\n      </div>\n    </>\n  );\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard('');\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}